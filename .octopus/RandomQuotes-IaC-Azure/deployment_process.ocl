step "generate-database-delta-report" {
    name = "Generate Database Delta Report"

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.Script.ScriptBody = <<-EOT
                $packagePath = $OctopusParameters["Octopus.Action.Package[RandomQuotes.DbUp].ExtractedPath"]
                $connectionString = $OctopusParameters["Project.Connection.String"]
                $environmentName = $OctopusParameters["Octopus.Environment.Name"]
                $reportPath = $OctopusParameters["Project.Database.Report.Path"]
                
                cd $packagePath
                $appToRun = ".\RandomQuotes.DbUp"
                $generatedReport = "$reportPath\UpgradeReport.html"
                
                & $appToRun --ConnectionString="$connectionString" --PreviewReportPath="$reportPath"
                
                New-OctopusArtifact -Path "$generatedReport" -Name "$environmentName.UpgradeReport.html"
                
                
            EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
        }
        worker_pool = "database-deployments"

        packages "RandomQuotes.DbUp" {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "RandomQuotes.DbUp"
            properties = {
                Extract = "True"
                Purpose = ""
                SelectionMode = "immediate"
            }
        }
    }
}

step "approve-database-delta" {
    name = "Approve Database Delta"

    action {
        action_type = "Octopus.Manual"
        properties = {
            Octopus.Action.Manual.BlockConcurrentDeployments = "True"
            Octopus.Action.Manual.Instructions = "Please approve the database delta script found in the artifacts section."
            Octopus.Action.Manual.ResponsibleTeamIds = "randomquotes-dbas"
            Octopus.Action.RunOnServer = "false"
        }
    }
}

step "deploy-the-database-changes" {
    name = "Deploy the Database Changes"

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.Script.ScriptBody = <<-EOT
                $packagePath = $OctopusParameters["Octopus.Action.Package[RandomQuotes.DbUp].ExtractedPath"]
                $connectionString = $OctopusParameters["Project.Connection.String"]
                
                cd $packagePath
                $appToRun = ".\RandomQuotes.DbUp"
                
                & $appToRun --ConnectionString="$connectionString" 
            EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
        }
        worker_pool = "database-deployments"

        packages "RandomQuotes.DbUp" {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "RandomQuotes.DbUp"
            properties = {
                Extract = "True"
                Purpose = ""
                SelectionMode = "immediate"
            }
        }
    }
}

step "deploy-to-web-app" {
    name = "Deploy to Web App"
    properties = {
        Octopus.Action.TargetRoles = "RandomQuotes-UI-AzureWebApp"
    }

    action {
        action_type = "Octopus.AzureAppService"
        properties = {
            Octopus.Action.Azure.ConnectionStrings = <<-EOT
                [
                   {
                      "name": "#{Project.Azure.RandomQuotes.DB.Name}",
                      "value": "#{Project.Connection.String}",
                      "type": "SQLAzure",
                      "slotSetting": false
                   }
                ]
            EOT
            Octopus.Action.Azure.DeploymentType = "Package"
            Octopus.Action.EnabledFeatures = "Octopus.Features.JsonConfigurationVariables,Octopus.Features.ConfigurationTransforms,Octopus.Features.SubstituteInFiles"
            Octopus.Action.Package.DownloadOnTentacle = "False"
            Octopus.Action.Package.FeedId = "octopus-server-built-in"
            Octopus.Action.Package.JsonConfigurationVariablesTargets = "appsettings.json"
            Octopus.Action.Package.PackageId = "RandomQuotes"
            Octopus.Action.RunOnServer = "false"
            OctopusUseBundledTooling = "False"
        }
        worker_pool_variable = ""

        packages {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "RandomQuotes"
            properties = {
                SelectionMode = "immediate"
            }
        }
    }
}