step "run-create-database-runbook" {
    name = "Run Create Database Runbook"

    action {
        properties = {
            Octopus.Action.Template.Id = "ActionTemplates-5"
            Octopus.Action.Template.Version = "14"
            Run.Runbook.Api.Key = "#{Project.Runbook.API.Key}"
            Run.Runbook.AutoApproveManualInterventions = "No"
            Run.Runbook.Base.Url = "http://4.227.214.210"
            Run.Runbook.CancelInSeconds = "1800"
            Run.Runbook.DateTime = "N/A"
            Run.Runbook.Environment.Name = "#{Octopus.Environment.Name}"
            Run.Runbook.Machines = "N/A"
            Run.Runbook.ManualIntervention.EnvironmentToUse = "#{Octopus.Environment.Name}"
            Run.Runbook.Name = "Create Database Runbook"
            Run.Runbook.Project.Name = "Random Quotes"
            Run.Runbook.Space.Name = "#{Octopus.Space.Name}"
            Run.Runbook.UsePublishedSnapShot = "True"
            Run.Runbook.Waitforfinish = "True"
        }
        worker_pool = "database-deployments"
    }
}

step "generate-database-delta-report" {
    name = "Generate Database Delta Report"

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.Script.ScriptBody = <<-EOT
                $packagePath = $OctopusParameters["Octopus.Action.Package[RandomQuotes.DbUp].ExtractedPath"]
                $connectionString = $OctopusParameters["Project.Connection.String"]
                $environmentName = $OctopusParameters["Octopus.Environment.Name"]
                $reportPath = $OctopusParameters["Project.Database.Report.Path"]
                
                cd $packagePath
                $appToRun = ".\RandomQuotes.DbUp"
                $generatedReport = "$reportPath\UpgradeReport.html"
                
                & $appToRun --ConnectionString="$connectionString" --PreviewReportPath="$reportPath"
                
                New-OctopusArtifact -Path "$generatedReport" -Name "$environmentName.UpgradeReport.html"
                
                
            EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
        }
        worker_pool = "database-deployments"

        packages "RandomQuotes.DbUp" {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "RandomQuotes.DbUp"
            properties = {
                Extract = "True"
                Purpose = ""
                SelectionMode = "immediate"
            }
        }
    }
}

step "approve-database-delta" {
    name = "Approve Database Delta"

    action {
        action_type = "Octopus.Manual"
        properties = {
            Octopus.Action.Manual.BlockConcurrentDeployments = "True"
            Octopus.Action.Manual.Instructions = "Please approve the database delta script found in the artifacts section."
            Octopus.Action.Manual.ResponsibleTeamIds = "randomquotes-dbas"
            Octopus.Action.RunOnServer = "false"
        }
    }
}

step "deploy-the-database-changes" {
    name = "Deploy the Database Changes"

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.Script.ScriptBody = <<-EOT
                $packagePath = $OctopusParameters["Octopus.Action.Package[RandomQuotes.DbUp].ExtractedPath"]
                $connectionString = $OctopusParameters["Project.Connection.String"]
                
                cd $packagePath
                $appToRun = ".\RandomQuotes.DbUp"
                
                & $appToRun --ConnectionString="$connectionString" 
            EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
        }
        worker_pool = "database-deployments"

        packages "RandomQuotes.DbUp" {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "RandomQuotes.DbUp"
            properties = {
                Extract = "True"
                Purpose = ""
                SelectionMode = "immediate"
            }
        }
    }
}

step "deploy-ui" {
    name = "Deploy UI"
    properties = {
        Octopus.Action.MaxParallelism = "1"
        Octopus.Action.TargetRoles = "RandomQuotes-UI"
    }

    action "remove-from-load-balancer" {
        action_type = "Octopus.Script"
        environments = ["staging", "production"]
        name = "Remove from LoadÂ Balancer"
        properties = {
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Script.ScriptBody = <<-EOT
                $machineName = $OctopusParameters["Octopus.Machine.Name"]
                
                Write-Host "Remove $machineName from the Load Balancer."
            EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
        }
        worker_pool_variable = ""
    }

    action "iis-apppool-stop" {
        is_required = true
        name = "IIS AppPool - Stop"
        properties = {
            AppPoolCheckDelay = "500"
            AppPoolCheckRetries = "20"
            AppPoolName = "Random Quotes_#{Octopus.Environment.Name}"
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Template.Id = "ActionTemplates-6"
            Octopus.Action.Template.Version = "6"
        }
        worker_pool_variable = ""
    }

    action "deploy-to-iis" {
        action_type = "Octopus.IIS"
        name = "Deploy to IIS"
        properties = {
            Octopus.Action.EnabledFeatures = "Octopus.Features.IISWebSite,Octopus.Features.CustomDirectory,Octopus.Features.JsonConfigurationVariables,Octopus.Features.ConfigurationVariables,Octopus.Features.ConfigurationTransforms"
            Octopus.Action.IISWebSite.ApplicationPoolFrameworkVersion = "v4.0"
            Octopus.Action.IISWebSite.ApplicationPoolIdentityType = "ApplicationPoolIdentity"
            Octopus.Action.IISWebSite.ApplicationPoolName = "Random Quotes_#{Octopus.Environment.Name}"
            Octopus.Action.IISWebSite.Bindings = "[{\"protocol\":\"http\",\"port\":\"#{Project.Website.Port}\",\"host\":\"\",\"thumbprint\":null,\"certificateVariable\":null,\"requireSni\":\"False\",\"enabled\":\"True\"}]"
            Octopus.Action.IISWebSite.CreateOrUpdateWebSite = "True"
            Octopus.Action.IISWebSite.DeploymentType = "webSite"
            Octopus.Action.IISWebSite.EnableAnonymousAuthentication = "True"
            Octopus.Action.IISWebSite.EnableBasicAuthentication = "False"
            Octopus.Action.IISWebSite.EnableWindowsAuthentication = "False"
            Octopus.Action.IISWebSite.StartApplicationPool = "True"
            Octopus.Action.IISWebSite.StartWebSite = "True"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolFrameworkVersion = "v4.0"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolIdentityType = "ApplicationPoolIdentity"
            Octopus.Action.IISWebSite.WebRootType = "packageRoot"
            Octopus.Action.IISWebSite.WebSiteName = "Random Quotes_#{Octopus.Environment.Name}"
            Octopus.Action.Package.AutomaticallyRunConfigurationTransformationFiles = "True"
            Octopus.Action.Package.AutomaticallyUpdateAppSettingsAndConnectionStrings = "True"
            Octopus.Action.Package.CustomInstallationDirectory = "C:\\RandomQuotes\\Website\\#{Octopus.Environment.Name}"
            Octopus.Action.Package.DownloadOnTentacle = "False"
            Octopus.Action.Package.FeedId = "octopus-server-built-in"
            Octopus.Action.Package.JsonConfigurationVariablesTargets = "appsettings.json"
            Octopus.Action.Package.PackageId = "RandomQuotes"
            Octopus.Action.RunOnServer = "false"
        }
        worker_pool_variable = ""

        packages {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "RandomQuotes"
            properties = {
                SelectionMode = "immediate"
            }
        }
    }

    action "add-to-load-balancer" {
        action_type = "Octopus.Script"
        environments = ["staging", "production"]
        name = "Add to Load Balancer "
        properties = {
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Script.ScriptBody = <<-EOT
                $machineName = $OctopusParameters["Octopus.Machine.Name"]
                
                Write-Host "Add $machineName to the Load Balancer."
            EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
        }
        worker_pool_variable = ""
    }
}